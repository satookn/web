@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<web.Context.Brand>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


<style>
    .pagination {
        display: inline-block;
        padding-left: 0;
        margin: 20px 0;
        border-radius: 4px;
    }

        .pagination > li {
            display: inline;
        }

            .pagination > li > a,
            .pagination > li > span {
                position: relative;
                float: left;
                padding: 6px 12px;
                margin-left: -1px;
                line-height: 1.428571429;
                text-decoration: none;
                background-color: #ffffff;
                border: 1px solid #dddddd;
            }

            .pagination > li:first-child > a,
            .pagination > li:first-child > span {
                margin-left: 0;
                border-bottom-left-radius: 4px;
                border-top-left-radius: 4px;
            }

            .pagination > li:last-child > a,
            .pagination > li:last-child > span {
                border-top-right-radius: 4px;
                border-bottom-right-radius: 4px;
            }

            .pagination > li > a:hover,
            .pagination > li > span:hover,
            .pagination > li > a:focus,
            .pagination > li > span:focus {
                background-color: #eeeeee;
            }

        .pagination > .active > a,
        .pagination > .active > span,
        .pagination > .active > a:hover,
        .pagination > .active > span:hover,
        .pagination > .active > a:focus,
        .pagination > .active > span:focus {
            z-index: 2;
            color: #ffffff;
            cursor: default;
            background-color: #428bca;
            border-color: #428bca;
        }

        .pagination > .disabled > span,
        .pagination > .disabled > a,
        .pagination > .disabled > a:hover,
        .pagination > .disabled > a:focus {
            color: #999999;
            cursor: not-allowed;
            background-color: #ffffff;
            border-color: #dddddd;
        }

    .pagination-lg > li > a,
    .pagination-lg > li > span {
        padding: 10px 16px;
        font-size: 18px;
    }

    .pagination-lg > li:first-child > a,
    .pagination-lg > li:first-child > span {
        border-bottom-left-radius: 6px;
        border-top-left-radius: 6px;
    }

    .pagination-lg > li:last-child > a,
    .pagination-lg > li:last-child > span {
        border-top-right-radius: 6px;
        border-bottom-right-radius: 6px;
    }

    .pagination-sm > li > a,
    .pagination-sm > li > span {
        padding: 5px 10px;
        font-size: 12px;
    }

    .pagination-sm > li:first-child > a,
    .pagination-sm > li:first-child > span {
        border-bottom-left-radius: 3px;
        border-top-left-radius: 3px;
    }

    .pagination-sm > li:first-child > a,
    .pagination-sm > li:first-child > span {
        border-top-right-radius: 3px;
        border-bottom-right-radius: 3px;
    }

    .pager {
        padding-left: 0;
        margin: 20px 0;
        text-align: center;
        list-style: none;
    }

        .pager:before,
        .pager:after {
            display: table;
            content: "";
        }

        .pager:after {
            clear: both;
        }

        .pager:before,
        .pager:after {
            display: table;
            content: "";
        }

        .pager:after {
            clear: both;
        }

        .pager li {
            display: inline;
        }

            .pager li > a,
            .pager li > span {
                display: inline-block;
                padding: 5px 14px;
                background-color: #ffffff;
                border: 1px solid #dddddd;
                border-radius: 15px;
            }

                .pager li > a:hover,
                .pager li > a:focus {
                    text-decoration: none;
                    background-color: #eeeeee;
                }

        .pager .next > a,
        .pager .next > span {
            float: right;
        }

        .pager .previous > a,
        .pager .previous > span {
            float: left;
        }

        .pager .disabled > a,
        .pager .disabled > a:hover,
        .pager .disabled > a:focus,
        .pager .disabled > span {
            color: #999999;
            cursor: not-allowed;
            background-color: #ffffff;
        }
</style>
<script>
    function sortTable() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("myTable");
        switching = true;

        while (switching) {

            switching = false;
            rows = table.rows;

            for (i = 1; i < (rows.length - 1); i++) {

                shouldSwitch = false;

                x = rows[i].getElementsByTagName("TD")[0];
                y = rows[i + 1].getElementsByTagName("TD")[0];

                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {

                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {

                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }
    function sortTable2() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("myTable");
        switching = true;

        while (switching) {

            switching = false;
            rows = table.rows;

            for (i = 1; i < (rows.length - 1); i++) {

                shouldSwitch = false;

                x = rows[i].getElementsByTagName("TD")[0];
                y = rows[i + 1].getElementsByTagName("TD")[0];

                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {

                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {

                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }
</script>
<h2 class="container">Thương hiệu</h2>
<div class="container  row d-flex mt-5 ">
    <p class="container  col-md-3 mx-0">
        <a href="@Url.Action("Create","Brand")" class="btn btn-md btn-success "><i class="fa fa-plus"></i> &nbspThêm Thương hiệu</a>
    </p>
    <div class="d-flex col-md-5">
        @using (Html.BeginForm("Index", "Brand", FormMethod.Get))
        {
            <p>
                Tìm sản phẩm:&nbsp @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = "Nhập tên thương hiệu" })
                <input type="submit" class="btn btn-sm btn-outline-primary " value="Tìm kiếm" />
            </p>
        }
    </div>
    <div class="container d-flex flex-row-reverse col-md-2 mx-2">

        <p><button onclick="sortTable2()" class="btn btn-md btn-primary "><i class="fas fa-sort-alpha-down-alt"></i></button></p>
        <p><button onclick="sortTable()" class="mx-3 btn btn-md btn-primary"> <i class="fas fa-sort-alpha-down"></i></button></p>
    </div>
</div>
<table class="table container" id="myTable">
    <tr class="bg-primary">
        <th class="text-center" style="width:200px">
            @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
        </th>
        <th style="width:200px">
            @Html.DisplayNameFor(model => model.FirstOrDefault().Avatar)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Slug)
            </th>*@
        <th class="text-center" style="width:300px">
            @Html.DisplayNameFor(model => model.FirstOrDefault().ShowOnHomePage)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().DisplayOrder)
        </th>*@
        <th class="text-center">
            @Html.DisplayNameFor(model => model.FirstOrDefault().CreatedOnUtc)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.FirstOrDefault().UpdateOnUtc)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Deleted)
        </th>*@
        <th class="text-center">Chức năng</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td class="text-center" style="width:100px;height:100px">

                <img src="~/Content/images/items/@item.Avatar" class="img-fluid" alt="" />
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Slug)
                </td>*@
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.ShowOnHomePage)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.DisplayOrder)
            </td>*@
            <td class="text-center" style="width:200px">
                @Html.DisplayFor(modelItem => item.CreatedOnUtc)
            </td>
            <td class="text-center" style="width:200px">
                @Html.DisplayFor(modelItem => item.UpdateOnUtc)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Deleted)
            </td>*@
            <td class="text-center" style="width:300px">
                <a href="@Url.Action("Edit","Brand", new { id = item.Id })" class="btn btn-md btn-primary ">  <i class="fa fa-edit"></i></a> |
                <a href="@Url.Action("Details","Brand", new { id = item.Id })" class="btn btn-md btn-primary "> <i class="fa fa-eye"></i></a> |
                <a href="@Url.Action("Delete","Brand", new { id = item.Id })" class="btn btn-md btn-danger "><i class="fa fa-trash-alt"></i></a>

            </td>
        </tr>
    }

</table>
<div class="text-center">
    Trang @(Model.PageCount <Model.PageNumber ?0 :Model.PageNumber)/@Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter }))
</div>

