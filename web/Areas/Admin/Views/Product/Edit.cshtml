@model web.Context.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ckeditor/ckeditor.js"></script>

@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cập Nhật Product</h4>
        <hr />
        <div class="container d-flex justify-content-end">
            <a href="@Url.Action("Index","Product")" class="btn btn-ms btn-primary "> <i class="fas fa-arrow-left text-white"></i>Trở về</a>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="row mx-0">
            <div class="col-md-6">
                <div class="form-group">


                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        <input type="file" name="ImageUpload" />

                    </div>
                    @Html.Hidden("oldimage", @Model.Avatar)
                </div>



                <div class="form-group">

                    @Html.LabelFor(model => model.ShortDes, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShortDes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShortDes, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.CreatedOnUtc, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.UpdatedOnUtc, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.LabelFor(model => model.FullDescription, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.TextAreaFor(model => model.FullDescription, new { htmlAttributes = new { @class = "form-control", @id = "FullDescription" } })
                        <script type="text/javascript" lang="javascript">

                            CKEDITOR.replace("FullDescription")
                        </script>
                        @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">

                    <div class="col-md-12">
                        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-6" })
                        @Html.DropDownListFor(model => model.CategoryId, ViewBag.ListCategory as SelectList, "Chọn danh mục", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId)
                    </div>
                </div>
                @*<div class="form-group">
                    @Html.LabelFor(model => model.ShowOnHomePage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShowOnHomePage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShowOnHomePage, "", new { @class = "text-danger" })
                    </div>
                </div>*@
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.LabelFor(model => model.TypeId, htmlAttributes: new { @class = "control-label col-md-6" })
                        @Html.DropDownListFor(model => model.TypeId, ViewBag.ProductType as SelectList, "Chọn loại sản phẩm", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TypeId)
                    </div>
                </div>

                <div class="form-group">

                    <div class="col-md-10">
                        @Html.LabelFor(model => model.BrandId, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.DropDownListFor(model => model.BrandId, ViewBag.ListBrand as SelectList, "Chọn thương hiệu", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BrandId)
                    </div>
                </div>
                <div class="form-group">

                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    @Html.LabelFor(model => model.PriceDiscount, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PriceDiscount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PriceDiscount, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Deleted, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Deleted, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Deleted, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.ShowOnHomePage, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShowOnHomePage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShowOnHomePage, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 d-flex flex  flex-row-reverse">
                <input type="submit" value="Lưu" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


